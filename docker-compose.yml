version: "3.6"

services:
  db:
    image: postgres:12.6
    restart: unless-stopped
    container_name: ${DB_HOST}
    env_file:
      - ./db.env
    networks:
      - dnpl
    volumes:
      - ${DB_VOLUME}:/var/lib/postgresql/data

  api:
    build: ./
    container_name: ${CONTAINER_API}
    volumes:
      - ${LOG_PATH}:/usr/src/app/logs:rw
      - ${DATA_DIR}:/usr/src/app/data:rw
    env_file:
      - ./api.env
    ports:
      - ${PORT}:5000
    restart: always
    networks:
      - dnpl
    depends_on:
      - redis
      - db
    links:
      - redis
      - db

  apscheduler:
    build:
      context: .
      dockerfile: Dockerfile_scheduler
    container_name: ${CONTAINER_APSCHEDULER}
    env_file:
      - ./api.env
    restart: always
    networks:
      - dnpl
    depends_on:
      - redis
    links:
      - redis

  elastic:

      image: elasticsearch:7.10.1

      container_name: ${ELASTICSEARCH_HOST}

      networks:
        - dnpl

      restart: always

      environment:
        - discovery.type=single-node

  filebeat:
    user: root
    image: docker.elastic.co/beats/filebeat:7.10.2
    container_name: ${COMPOSE_PROJECT_NAME}_api_filebeat
    volumes:
      - ${LOG_PATH}:/logs:rw
      - ${LOG_PATH}/filebeat_data:/usr/share/filebeat/data:rw
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    env_file:
      - ./.env
    command: [ "--strict.perms=false" ]
    restart: always
    networks:
      - dnpl

  heartbeat:
    build:
      context: .
      dockerfile: heartbeat_dockerfile
    env_file:
      - ./.env
    container_name: ${COMPOSE_PROJECT_NAME}_api_heartbeat
    volumes:
      - ./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
    restart: always
    depends_on:
      - api
    networks:
      - dnpl
      
  redis:
    image: redis:3.0.2
    container_name: ${REDIS_HOST}
    restart: always
    networks:
      - dnpl

networks:
    dnpl:
      external:
        name: ${NETWORK}
